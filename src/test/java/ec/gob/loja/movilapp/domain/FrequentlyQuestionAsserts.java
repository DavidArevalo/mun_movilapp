package ec.gob.loja.movilapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FrequentlyQuestionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrequentlyQuestionAllPropertiesEquals(FrequentlyQuestion expected, FrequentlyQuestion actual) {
        assertFrequentlyQuestionAutoGeneratedPropertiesEquals(expected, actual);
        assertFrequentlyQuestionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrequentlyQuestionAllUpdatablePropertiesEquals(FrequentlyQuestion expected, FrequentlyQuestion actual) {
        assertFrequentlyQuestionUpdatableFieldsEquals(expected, actual);
        assertFrequentlyQuestionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrequentlyQuestionAutoGeneratedPropertiesEquals(FrequentlyQuestion expected, FrequentlyQuestion actual) {
        assertThat(expected)
            .as("Verify FrequentlyQuestion auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrequentlyQuestionUpdatableFieldsEquals(FrequentlyQuestion expected, FrequentlyQuestion actual) {
        assertThat(expected)
            .as("Verify FrequentlyQuestion relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getQuestion()).as("check question").isEqualTo(actual.getQuestion()))
            .satisfies(e -> assertThat(e.getAnswer()).as("check answer").isEqualTo(actual.getAnswer()))
            .satisfies(e -> assertThat(e.getQuestionCategoryId()).as("check questionCategoryId").isEqualTo(actual.getQuestionCategoryId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrequentlyQuestionUpdatableRelationshipsEquals(FrequentlyQuestion expected, FrequentlyQuestion actual) {
        assertThat(expected)
            .as("Verify FrequentlyQuestion relationships")
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
