package ec.gob.loja.movilapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SocialMediaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialMediaAllPropertiesEquals(SocialMedia expected, SocialMedia actual) {
        assertSocialMediaAutoGeneratedPropertiesEquals(expected, actual);
        assertSocialMediaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialMediaAllUpdatablePropertiesEquals(SocialMedia expected, SocialMedia actual) {
        assertSocialMediaUpdatableFieldsEquals(expected, actual);
        assertSocialMediaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialMediaAutoGeneratedPropertiesEquals(SocialMedia expected, SocialMedia actual) {
        assertThat(expected)
            .as("Verify SocialMedia auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialMediaUpdatableFieldsEquals(SocialMedia expected, SocialMedia actual) {
        assertThat(expected)
            .as("Verify SocialMedia relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getIcon()).as("check icon").isEqualTo(actual.getIcon()))
            .satisfies(e -> assertThat(e.getColour()).as("check colour").isEqualTo(actual.getColour()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialMediaUpdatableRelationshipsEquals(SocialMedia expected, SocialMedia actual) {
        assertThat(expected)
            .as("Verify SocialMedia relationships")
            .satisfies(e -> assertThat(e.getApplications()).as("check applications").isEqualTo(actual.getApplications()));
    }
}
