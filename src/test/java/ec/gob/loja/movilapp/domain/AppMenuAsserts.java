package ec.gob.loja.movilapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AppMenuAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppMenuAllPropertiesEquals(AppMenu expected, AppMenu actual) {
        assertAppMenuAutoGeneratedPropertiesEquals(expected, actual);
        assertAppMenuAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppMenuAllUpdatablePropertiesEquals(AppMenu expected, AppMenu actual) {
        assertAppMenuUpdatableFieldsEquals(expected, actual);
        assertAppMenuUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppMenuAutoGeneratedPropertiesEquals(AppMenu expected, AppMenu actual) {
        assertThat(expected)
            .as("Verify AppMenu auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppMenuUpdatableFieldsEquals(AppMenu expected, AppMenu actual) {
        assertThat(expected)
            .as("Verify AppMenu relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getIcon()).as("check icon").isEqualTo(actual.getIcon()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getPriority()).as("check priority").isEqualTo(actual.getPriority()))
            .satisfies(e -> assertThat(e.getComponent()).as("check component").isEqualTo(actual.getComponent()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppMenuUpdatableRelationshipsEquals(AppMenu expected, AppMenu actual) {
        assertThat(expected)
            .as("Verify AppMenu relationships")
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
